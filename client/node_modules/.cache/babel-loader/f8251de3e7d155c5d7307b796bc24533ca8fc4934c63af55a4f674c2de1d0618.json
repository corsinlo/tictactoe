{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemes\\\\tictactoe\\\\client\\\\src\\\\components\\\\Board.jsx\";\nimport React from 'react';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = _ref => {\n  let {\n    game,\n    player,\n    onSquareClick,\n    winner\n  } = _ref;\n  const {\n    playBoard = [],\n    status = 'waiting'\n  } = game;\n  const enabled = status === 'playing';\n  const canPlay = player.id === game.playerTurn;\n  const {\n    winningCombination = []\n  } = winner || {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: playBoard.map((item, index) => {\n      const isWinnerSquare = winningCombination.includes(index);\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: item,\n        onClick: () => onSquareClick(index),\n        enabled: enabled,\n        canPlay: canPlay,\n        isWinnerSquare: isWinnerSquare\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Square","Board","game","player","onSquareClick","winner","playBoard","status","enabled","canPlay","id","playerTurn","winningCombination","map","item","index","isWinnerSquare","includes"],"sources":["C:/Users/nemes/tictactoe/client/src/components/Board.jsx"],"sourcesContent":["import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst Board = ({ game, player, onSquareClick, winner }) => {\r\n  const { playBoard = [], status = 'waiting' } = game;\r\n  const enabled = status === 'playing';\r\n  const canPlay = player.id === game.playerTurn;\r\n  const { winningCombination = [] } = winner || {};\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {playBoard.map((item, index) => {\r\n        const isWinnerSquare = winningCombination.includes(index);\r\n        return (\r\n          <Square\r\n            key={index}\r\n            value={item}\r\n            onClick={() => onSquareClick(index)}\r\n            enabled={enabled}\r\n            canPlay={canPlay}\r\n            isWinnerSquare={isWinnerSquare}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAAC;AAE9B,MAAMC,KAAK,GAAG,QAA6C;EAAA,IAA5C;IAAEC,IAAI;IAAEC,MAAM;IAAEC,aAAa;IAAEC;EAAO,CAAC;EACpD,MAAM;IAAEC,SAAS,GAAG,EAAE;IAAEC,MAAM,GAAG;EAAU,CAAC,GAAGL,IAAI;EACnD,MAAMM,OAAO,GAAGD,MAAM,KAAK,SAAS;EACpC,MAAME,OAAO,GAAGN,MAAM,CAACO,EAAE,KAAKR,IAAI,CAACS,UAAU;EAC7C,MAAM;IAAEC,kBAAkB,GAAG;EAAG,CAAC,GAAGP,MAAM,IAAI,CAAC,CAAC;EAEhD,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,UACnBC,SAAS,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC9B,MAAMC,cAAc,GAAGJ,kBAAkB,CAACK,QAAQ,CAACF,KAAK,CAAC;MACzD,oBACE,QAAC,MAAM;QAEL,KAAK,EAAED,IAAK;QACZ,OAAO,EAAE,MAAMV,aAAa,CAACW,KAAK,CAAE;QACpC,OAAO,EAAEP,OAAQ;QACjB,OAAO,EAAEC,OAAQ;QACjB,cAAc,EAAEO;MAAe,GAL1BD,KAAK;QAAA;QAAA;QAAA;MAAA,QAMV;IAEN,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KAvBId,KAAK;AAyBX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}