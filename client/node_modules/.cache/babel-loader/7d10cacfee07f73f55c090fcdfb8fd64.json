{"ast":null,"code":"var _jsxFileName = \"/Users/ludovicocorsini/Personal/projects/tictactoe/client/src/pages/Game.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport Board from '../components/Board';\nlet socket;\nconst Game = _ref => {\n  let {\n    name,\n    gameId\n  } = _ref;\n  const URL_ENDPOINT = 'http://localhost:5001';\n  const [winner, setWinner] = useState(null);\n  const [player, setPlayer] = useState({});\n  const [game, setGame] = useState({});\n  const [notification, setNotification] = useState([]);\n  useEffect(() => {\n    const event = gameId ? 'joinGame' : 'createGame';\n    socket = new io(URL_ENDPOINT);\n    socket.emit(event, {\n      name,\n      gameId\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [URL_ENDPOINT, gameId, name]);\n  useEffect(() => {\n    socket.on('notification', data => {\n      const {\n        message = ''\n      } = data;\n      notification.push(message);\n      setNotification([...notification]);\n    });\n  }, [notification]);\n  useEffect(() => {\n    socket.on('playerCreated', data => {\n      const {\n        player\n      } = data;\n      setPlayer(player);\n    });\n    socket.on('gameUpdated', data => {\n      const {\n        game\n      } = data;\n      setGame(game);\n    });\n    socket.on('gameEnd', data => {\n      const {\n        winner\n      } = data;\n      setWinner(winner);\n    });\n  });\n  const onSquareClick = value => {\n    socket.emit('moveMade', {\n      square: value,\n      player,\n      gameId: game.id\n    });\n  };\n  const getWinnerMessage = () => {\n    return winner.player.id === player.id ? 'You Win' : 'You Loose';\n  };\n  const turnMessage = game.playerTurn === player.id ? 'Your Move' : 'Opponunt Turn';\n  const winnerMessage = winner ? getWinnerMessage() : 'Draw game';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, player && /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Welcome \", player.name, \".\", ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"You are playing \", player.symbol)), game.status === 'playing' && /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 43\n    }\n  }, turnMessage), game && /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }\n  }, \"Game ID: \", game.id), game.status === 'gameOver' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, winnerMessage), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Board, {\n    player: player,\n    game: game,\n    onSquareClick: onSquareClick,\n    winner: winner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), notification.map((msg, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, msg)));\n};\nexport default Game;","map":{"version":3,"names":["React","useEffect","useState","io","Board","socket","Game","name","gameId","URL_ENDPOINT","winner","setWinner","player","setPlayer","game","setGame","notification","setNotification","event","emit","off","on","data","message","push","onSquareClick","value","square","id","getWinnerMessage","turnMessage","playerTurn","winnerMessage","symbol","status","map","msg","index"],"sources":["/Users/ludovicocorsini/Personal/projects/tictactoe/client/src/pages/Game.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport Board from '../components/Board';\n\nlet socket;\n\nconst Game = ({ name, gameId }) => {\n    const URL_ENDPOINT = 'http://localhost:5001';\n    const [winner, setWinner] = useState(null);\n    const [player, setPlayer] = useState({});\n    const [game, setGame] = useState({});\n    const [notification, setNotification] = useState([]);\n\n    useEffect(() => {\n        const event = gameId ? 'joinGame' : 'createGame';\n        socket = new io(URL_ENDPOINT);\n        socket.emit(event, { name, gameId });\n\n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        };\n    }, [URL_ENDPOINT, gameId, name]);\n\n    useEffect(() => {\n        socket.on('notification', data => {\n            const { message = '' } = data;\n            notification.push(message);\n            setNotification([...notification]);\n        });\n    }, [notification]);\n\n    useEffect(() => {\n        socket.on('playerCreated', data => {\n            const { player } = data;\n            setPlayer(player);\n        });\n\n        socket.on('gameUpdated', data => {\n            const { game } = data;\n            setGame(game);\n        });\n\n        socket.on('gameEnd', data => {\n            const { winner } = data;\n            setWinner(winner);\n        });\n    });\n\n    const onSquareClick = value => {\n        socket.emit('moveMade', {\n            square: value,\n            player,\n            gameId: game.id,\n        });\n    };\n\n    const getWinnerMessage = () => {\n        return winner.player.id === player.id ? 'You Win' : 'You Loose';\n    };\n\n    const turnMessage =\n        game.playerTurn === player.id ? 'Your Move' : 'Opponunt Turn';\n\n    const winnerMessage = winner ? getWinnerMessage() : 'Draw game';\n\n    return (\n        <div>\n            {player && (\n                <h5>\n                    Welcome {player.name}.{' '}\n                    <strong>You are playing {player.symbol}</strong>\n                </h5>\n            )}\n            {game.status === 'playing' && <h5>{turnMessage}</h5>}\n            {game && <h5>Game ID: {game.id}</h5>}\n\n            {game.status === 'gameOver' && (\n                <div className=\"alert alert-info\">{winnerMessage}</div>\n            )}\n            <hr />\n            <Board\n                player={player}\n                game={game}\n                onSquareClick={onSquareClick}\n                winner={winner}\n            />\n            {notification.map((msg, index) => (\n                <p key={index}>{msg}</p>\n            ))}\n        </div>\n    );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}