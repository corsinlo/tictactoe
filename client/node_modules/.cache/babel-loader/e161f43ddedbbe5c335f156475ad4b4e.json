{"ast":null,"code":"var _jsxFileName = \"/Users/ludovicocorsini/Personal/projects/tictactoe/client/src/components/Board.jsx\";\nimport React from 'react';\nimport Square from './Square';\nconst Board = _ref => {\n  let {\n    game,\n    player,\n    onSquareClick,\n    winner\n  } = _ref;\n  const {\n    playBoard = [],\n    status = 'waiting'\n  } = game;\n  const enabled = status === 'playing';\n  const canPlay = player.id === game.playerTurn;\n  const {\n    winningCombination = []\n  } = winner || {};\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, playBoard.map((item, index) => {\n    const isWinnerSquare = winningCombination.includes(index);\n    return /*#__PURE__*/React.createElement(Square, {\n      key: index,\n      value: item,\n      onClick: () => onSquareClick(index),\n      enabled: enabled,\n      canPlay: canPlay,\n      isWinnerSquare: isWinnerSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    });\n  }));\n};\nexport default Board;","map":{"version":3,"names":["React","Square","Board","game","player","onSquareClick","winner","playBoard","status","enabled","canPlay","id","playerTurn","winningCombination","map","item","index","isWinnerSquare","includes"],"sources":["/Users/ludovicocorsini/Personal/projects/tictactoe/client/src/components/Board.jsx"],"sourcesContent":["import React from 'react';\nimport Square from './Square';\n\nconst Board = ({ game, player, onSquareClick, winner }) => {\n  const { playBoard = [], status = 'waiting' } = game;\n  const enabled = status === 'playing';\n  const canPlay = player.id === game.playerTurn;\n  const { winningCombination = [] } = winner || {};\n\n  return (\n    <div className=\"board\">\n      {playBoard.map((item, index) => {\n        const isWinnerSquare = winningCombination.includes(index);\n        return (\n          <Square\n            key={index}\n            value={item}\n            onClick={() => onSquareClick(index)}\n            enabled={enabled}\n            canPlay={canPlay}\n            isWinnerSquare={isWinnerSquare}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,KAAK,GAAG,QAA6C;EAAA,IAA5C;IAAEC,IAAI;IAAEC,MAAM;IAAEC,aAAa;IAAEC;EAAO,CAAC;EACpD,MAAM;IAAEC,SAAS,GAAG,EAAE;IAAEC,MAAM,GAAG;EAAU,CAAC,GAAGL,IAAI;EACnD,MAAMM,OAAO,GAAGD,MAAM,KAAK,SAAS;EACpC,MAAME,OAAO,GAAGN,MAAM,CAACO,EAAE,KAAKR,IAAI,CAACS,UAAU;EAC7C,MAAM;IAAEC,kBAAkB,GAAG;EAAG,CAAC,GAAGP,MAAM,IAAI,CAAC,CAAC;EAEhD,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnBC,SAAS,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC9B,MAAMC,cAAc,GAAGJ,kBAAkB,CAACK,QAAQ,CAACF,KAAK,CAAC;IACzD,oBACE,oBAAC,MAAM;MACL,GAAG,EAAEA,KAAM;MACX,KAAK,EAAED,IAAK;MACZ,OAAO,EAAE,MAAMV,aAAa,CAACW,KAAK,CAAE;MACpC,OAAO,EAAEP,OAAQ;MACjB,OAAO,EAAEC,OAAQ;MACjB,cAAc,EAAEO,cAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAC/B;EAEN,CAAC,CAAC,CACE;AAEV,CAAC;AAED,eAAef,KAAK"},"metadata":{},"sourceType":"module"}